<div class="p-3">
    <a class="btn btn-success" href="/materias/materiaAdd">Agregar Materia</a>
    <button class="btn btn-info" id="generarPdfBtn">Generar PDF</button>
    <div class="container px-4">
        <div class="row">
            <div class="col">
                <table class="table" id="tablaUsuarios">
                    <tr>
                        <td>#</td>
                        <td>Nombre</td>
                        <td>Hora</td>
                        <td>Grupo</td>
                        <td>Detalles</td>
                    </tr>
                    {{#each data}}
                    <tr>
                        <td>{{id}}</td>
                        <td>{{nombre}}</td>
                        <td>{{hora}}</td>
                        <td>{{grupo}}</td>
                        <td><!-- Button trigger modal -->
                            <form action="/materia/{{id}}" method="post">
                                <a href="/materias/detalles/{{id}}" type="button" class="btn btn-outline-info">
                                    Detalles
                                </a>
                            </form>
                        </td>
                    </tr>
                    {{else}}
                    <tr>
                        <td>No hay materias registradas!</td>
                    </tr>
                    {{/each}}
                </table>
            </div>
            <div class="col"><canvas id="myChart"></canvas></div>
        </div>
    </div>
</div>

<script>
    document.getElementById('generarPdfBtn').addEventListener('click', async () => {
        // Obtener la tabla y sus filas
        const tablaUsuarios = document.getElementById('tablaUsuarios');
        const filas = tablaUsuarios.getElementsByTagName('tr');

        // Array para almacenar los datos de la tabla
        const data = [];

        // Iterar sobre las filas y obtener los datos de cada celda
        for (let i = 0; i < filas.length; i++) {
            const celdas = filas[i].getElementsByTagName('td');
            const rowData = [];
            for (let j = 0; j < celdas.length; j++) {
                rowData.push(celdas[j].innerText);
            }
            data.push(rowData);
        }

        // Enviar los datos al backend
        const response = await fetch('/materias/generar-pdf', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(data)
        });

        if (response.ok) {
            // Convertir la respuesta a un blob
            const blob = await response.blob();
            // Crear un enlace para descargar el archivo
            const url = window.URL.createObjectURL(blob);
            const a = document.createElement('a');
            a.href = url;
            a.download = 'tabla.pdf';
            document.body.appendChild(a);
            a.click();
            // Liberar el objeto URL
            window.URL.revokeObjectURL(url);
        } else {
            // Error al generar el PDF
            console.error('Error al generar el PDF:', response.status);
        }
    });


    // Obtener los datos del backend
    fetch('http://localhost:3000/materias/materias')
        .then(response => {
            if (!response.ok) {
                throw new Error('Error al obtener los datos');
            }
            return response.json();
        })
        .then(data => {
            // Llamar a una funci칩n para procesar los datos y crear la gr치fica
            procesarDatos(data);
        })
        .catch(error => {
            console.error('Error al obtener los datos:', error);
        });

    function procesarDatos(data) {
        const labels = data.map(item => item.nombre);
        const valores = data.map(item => item.grupo);

        // Llamar a una funci칩n para crear la gr치fica con los datos procesados
        crearGrafica(labels, valores);
    }

    function crearGrafica(labels, valores) {
        const ctx = document.getElementById('myChart').getContext('2d');
        const myChart = new Chart(ctx, {
            type: 'doughnut',
            data: {
                labels: labels,
                datasets: [{
                    label: 'Grupo',
                    data: valores,
                    backgroundColor: 'rgba(255, 99, 132, 0.2)',
                    borderColor: 'rgba(255, 99, 132, 1)',
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });
    }
</script>